#!/usr/bin/env ruby

# frozen-string-literal: true

require 'pp'
require 'ap'
require 'pry'
require 'rest-client'
require 'json'
require 'aws-sdk-s3'
require 'csv'

require_relative 'lib/jiratk/account_manager'
require_relative 'lib/jiratk/api_helper'

api_keys = AccountManager.new.api_keys
USERNAME = api_keys[:jira_id]
PASSWORD = api_keys[:jira_key]

# Helper class for keep in the json generation under control.
class Issue
  def initialize(ticket)
    @project_key = ticket.project_key
    @issuetype_name = ticket.issuetype_name
    @gem = ticket.gem
    @version = ticket.version
  end

  def summary
    raise NotImplementedError # "update  #{@gem} gem to version #{@version}"
  end

  def description
    'updating a ruby gem'
  end

  def issuetype
    { "name": @issuetype_name }
  end

  def labels
    raise NotImplementedError # ['maintenance']
  end

  def acceptance_criteria
    'ensure all specs and features pass'
    # {
    #   "version": 1,
    #   "type": 'doc',
    #   "content": [
    #     {
    #       "type": 'paragraph',
    #       "content": [
    #         { "type": 'text', "text": 'Here is the autogenerated acceptance criteria.' }
    #       ]
    #     }
    #   ]
    # }
  end

  def project
    { "key": @project_key }
  end

  def time_estimate
    { "originalEstimate": '15m' }
  end

  def to_h
    {
      fields: {
        project: project,
        summary: summary,
        description: description,
        issuetype: issuetype,
        labels: labels,
        timetracking: time_estimate,
        customfield_10029: acceptance_criteria
      }
    }
  end
end

# Subclass to reduce cognitive load
class GemIssue < Issue
  def summary
    "update  #{@gem} gem to version #{@version}"
  end

  def labels
    ['maintenance']
  end
end

require 'ostruct'

ticket = OpenStruct.new(
  project_key: 'SCRUM',
  issuetype_name: 'Task',
  gem: 'rubocop',
  version: '1.0.0'
)

params = GemIssue.new(ticket).to_h

api_url = 'https://doolin.atlassian.net/rest/api/2/issue/'
api_helper = ApiHelper.new(api_url)
api_helper.post(params)
